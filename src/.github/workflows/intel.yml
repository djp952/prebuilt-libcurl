# Copyright (C) 2000 - 2022 Daniel Stenberg, <daniel@haxx.se>, et al.
#
# SPDX-License-Identifier: curl

name: Linux

on:
  # Trigger the workflow on push or pull requests, but only for the
  # master branch
  push:
    branches:
    - master
    - '*/ci'
  pull_request:
    branches:
    - master

jobs:
  autotools:
    name: ${{ matrix.build.name }}
    runs-on: 'ubuntu-latest'
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        build:
        - name: Intel compiler - without SSL
          install: libpsl-dev libbrotli-dev libzstd-dev zlib1g-dev
          configure: CC=icc --enable-debug --without-ssl
        - name: Intel compiler - OpenSSL
          install: libpsl-dev libbrotli-dev libzstd-dev zlib1g-dev libssl-dev
          configure: CC=icc --enable-debug --with-openssl

    steps:
    - run: |
        sudo apt-get update
        sudo apt-get install libtool autoconf automake pkg-config stunnel4 ${{ matrix.build.install }}
        sudo python3 -m pip install impacket
      name: 'install prereqs and impacket'

    - run: |
        cd /tmp
        wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
        sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
        rm GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
        sudo add-apt-repository "deb https://apt.repos.intel.com/oneapi all main"
        sudo apt install --no-install-recommends intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic
        source /opt/intel/oneapi/setvars.sh
        printenv >> $GITHUB_ENV
      name: 'Install Intel compilers'

    - uses: actions/checkout@v3

    - run: autoreconf -fi
      name: 'autoreconf'

    - run: ./configure --enable-warnings --enable-werror ${{ matrix.build.configure }}
      name: 'configure'

    - run: make V=1
      name: 'make'

    - run: make V=1 examples
      name: 'make examples'

    - run: make V=1 test-ci
      name: 'test'
      env:
        TFLAGS: "${{ matrix.build.tflags }}"
